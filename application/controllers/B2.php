<?php
 ini_set("max_execution_time", "300"); header("Access-Control-Allow-Origin: *"); defined('BASEPATH') OR exit('No direct script access allowed'); class B2 extends CI_Controller{ protected $b2_domain; protected $b2_app_key_id; protected $b2_app_key; protected $b2_bucket_id; protected $temp; public function __construct(){ parent::__construct(); $this->load->helper('basic'); ip_block(); $this->config->load('config'); $params = $this->config->item('b2'); $this->b2_domain = $params['b2_domain']; $this->b2_app_key_id = $params['b2_app_key_id']; $this->b2_app_key = $params['b2_app_key']; $this->b2_bucket_id = $params['b2_bucket_id']; $this->temp = FCPATH.'data/temp/'; $params = array( 'b2_domain' => $this->b2_domain, 'b2_app_key_id' => $this->b2_app_key_id, 'b2_app_key' => $this->b2_app_key, 'b2_bucket_id' => $this->b2_bucket_id ); $this->load->model('query','',TRUE); $this->b2_domain = $this->query->domain('backblaze'); $this->load->library('up_deal'); $this->load->library('backblaze', $params); $this->load->library('basic'); $this->basic->cookie_ban(); } protected function error_msg($msg){ $data = array( "code" => 0, "msg" => $msg ); $data = json_encode($data); echo $data; exit; } public function upload(){ $config = $this->up_deal->config($this->temp); $this->load->library('upload', $config); $this->up_deal->check_storage_status('backblaze'); $starts = $this->up_deal->up_start(); if ( ! $this->upload->do_upload('file')) { $msg = $this->upload->display_errors(); $msg = strip_tags($msg); $this->error_msg($msg); } else { $data = $this->upload->data(); $full_path = $data['full_path']; $mime = $data['file_type']; $imgid = md5_file($full_path); $imgid = substr($imgid,8,16); $new_path = $this->temp.$imgid.$data['file_ext']; $b2_path = $starts['up_path'].$imgid.$data['file_ext']; $full_thumb_path = $this->temp.'/'.$imgid.'_thumb'.$data['file_ext']; $b2_thumb_path = $starts['up_path'].$imgid.'_thumb'.$data['file_ext']; rename($full_path,$new_path); $full_path = $new_path; $this->load->library('image'); if(!$this->image->thumbnail($full_path,290,175)){ $b2_thumb_path = $b2_path; } if( $data['file_type'] === 'image/x-ms-bmp' ){ $tmpinfo = getimagesize($full_path); $data['image_width'] = $tmpinfo[0]; $data['image_height'] = $tmpinfo[1]; } if($data['file_type'] === 'image/webp'){ $data['image_width'] = 0; $data['image_height'] = 0; } $this->load->model('insert','',TRUE); $this->load->model('query','',TRUE); $info = $this->up_deal->check_repeat($imgid,$data,$this->b2_domain); if($info){ $this->up_deal->clean_temp($new_path,$full_thumb_path); $info = json_encode($info); exit($info); } $re_one = $this->backblaze->upload($full_path,$b2_path,$mime); if($b2_path != $b2_thumb_path){ $re_two = $this->backblaze->upload($full_thumb_path,$b2_thumb_path,$mime); } else{ $re_two = TRUE; } if( ! $re_one OR ! $re_two){ $this->up_deal->clean_temp($new_path,$full_thumb_path); $this->error_msg('请求接口失败，请重试！'); } $img = json_decode($re_one); $img_thumb = json_decode($re_two); $others = array( "img_fileId" => $img->fileId, "thumb_fileId" => $img_thumb->fileId ); $others = json_encode($others); $token = $this->up_deal->token($starts); $delete = $this->basic->domain().'/delete/'.$token; $datas = array( "imgid" => $imgid, "path" => $b2_path, "thumb_path"=> $b2_thumb_path, "storage" => "backblaze", "ip" => get_ip(), "ua" => get_ua(), "date" => $starts['date'], "user" => $starts['user'], "level" => 'unknown', "token" => $token, "others" => $others ); $imginfo = array( "imgid" => $imgid, "mime" => $mime, "width" => $data['image_width'], "height" => $data['image_height'], "ext" => $data['file_ext'], "client_name" => $data['client_name'], "size" => $data['file_size'] ); $id = $this->insert->images($datas); $imginfo = $this->insert->imginfo($imginfo); $this->up_deal->clean_temp($new_path,$full_thumb_path); if($id && $imginfo) { $info = array( "code" => 200, "id" => $id, "imgid" => $imgid, "relative_path" => $b2_path, "url" => $this->b2_domain.$b2_path, "thumbnail_url" => $this->b2_domain.$b2_thumb_path, "width" => $data['image_width'], "height" => $data['image_height'], "delete" => $delete ); $info = json_encode($info); exit($info); } } } }