<?php
 defined('BASEPATH') OR exit('No direct script access allowed'); class Set extends CI_Controller{ public function __construct(){ parent::__construct(); $this->load->library("basic"); $this->basic->load(); $this->load->model('update','',TRUE); $this->load->library('basic'); $this->basic->is_login(TRUE); } public function site(){ $data['logo'] = $this->input->post('logo',TRUE); $data['title'] = $this->input->post('title',TRUE); $data['keywords'] = $this->input->post('keywords',TRUE); $data['description'] = $this->input->post('description',TRUE); $data['description'] = trim($data['description']); $data['analytics'] = $this->input->post('analytics'); $data = json_encode($data); $data = addslashes($data); if($this->update->site('site_setting',$data)){ $this->suc_msg('设置已更新！'); } else{ echo '更新发生错误!'; exit; } } public function options($name){ $data['values'] = $this->input->post('values',TRUE); try{ $this->update->option($name,$data['values']); $this->suc_msg('设置已保存！'); } catch(EXCeption $e){ exit($e->getMessage()); } } public function uplimit(){ $data['max_size'] = (int)$this->input->post('max_size',TRUE); $data['limit'] = (int)$this->input->post('limit',TRUE); $data = json_encode($data); if($this->update->site('uplimit',$data)){ $this->suc_msg('设置已更新！'); } else{ echo '更新发生错误!'; exit; } } public function tinypng(){ $data['api1'] = $this->input->post('api1',TRUE); $data['api2'] = $this->input->post('api2',TRUE); @$switch = $this->input->post('switch',TRUE); if($switch != 'on'){ $switch = 'OFF'; } else{ $switch = 'ON'; } $data = json_encode($data); if($this->update->tinypng($data,$switch)){ $this->suc_msg('设置已更新！'); } else{ echo '更新发生错误!'; exit; } } public function moderate(){ $data['api'] = $this->input->post('api',TRUE); @$switch = $this->input->post('switch',TRUE); if($switch != 'on'){ $switch = 'OFF'; } else{ $switch = 'ON'; } if($this->update->moderate($data['api'],$switch)){ $this->suc_msg('设置已更新！'); } else{ echo '更新发生错误!'; exit; } } public function storage($engine){ $data['domains'] = $this->input->post('domain',TRUE); $data['weight'] = $this->input->post('weight',TRUE); $data['switch'] = $this->input->post('switch',TRUE); $data['switch'] = strtoupper($data['switch']); $data['permission'] = (int)$this->input->post('permission',TRUE); if(empty($data['switch'])){ $data['switch'] = 'OFF'; } switch ($engine) { case 'localhost': $data['switch'] = 'ON'; break; case 'backblaze': case 'cos': case 'qiniu': break; case 'ftp': $ext = get_loaded_extensions(); $ftp = array_search('ftp',$ext) ? TRUE : FALSE; if( ! $ftp){ $this->error_msg('设置失败，不支持FTP组件！'); } break; default: exit('参数有误！'); break; } if($this->update->storage($data,$engine)){ $this->suc_msg('设置已更新！'); } else{ echo '更新发生错误!'; exit; } } public function del_img(){ @$imgid = $this->input->post('imgid',TRUE); @$path = $this->input->post('path',TRUE); @$thumbnail_path = $this->input->post('thumbnail_path',TRUE); $this->load->model('delete','',TRUE); $this->delete->del_img($imgid); $path = FCPATH.$path; $thumbnail_path = FCPATH.$thumbnail_path; unlink($path); unlink($thumbnail_path); $re = array( "code" => 200, "msg" => "删除成功！" ); $re = json_encode($re); echo $re; } public function cancel($id){ $id = (int)$id; $sql = "UPDATE img_images SET level = 'everyone' WHERE `id` = $id"; $this->load->database(); if($this->db->query($sql)){ $info = [ "code" => 200, "id" => $id, "msg" => 'successful!' ]; exit(json_encode($info)); } } public function save_token_status(){ @$switch = $this->input->post('switch',TRUE); $switch = ($switch == NULL) ? 'OFF' : 'ON'; $data = ['switch' => $switch]; $this->db->where('name', 'token'); $update = $this->db->update('options', $data); if($update){ $this->suc_msg('状态已更新！'); } } public function change_token(){ $key = $this->config->item('key'); $timestamp = time(); $token = md5($key.$timestamp); $data = ['values' => $token]; $this->db->where('name', 'token'); $update = $this->db->update('options', $data); if($update){ $this->show_json(200,'token已更改！',$data); } } public function saveIP(){ @$ips = $this->input->post('ips',TRUE); if ($ips == ''){ $this->error_msg('IP不能为空！'); } if( file_put_contents(FCPATH.'/data/ipblock.txt',$ips) ) { $this->suc_msg('设置已保存！'); } } protected function suc_msg($msg){ $arr = array( "code" => 200, "msg" => $msg ); $info = json_encode($arr); exit($info); } protected function error_msg($msg){ $arr = array( "code" => 0, "msg" => $msg ); $info = json_encode($arr); exit($info); } protected function show_json($code,$msg = NULL,$data = NULL){ $code = intval($code); $result = [ 'code' => $code, 'msg' => $msg, 'data' => $data ]; exit(json_encode($result)); } } ?>