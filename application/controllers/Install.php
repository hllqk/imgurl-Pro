<?php
 defined('BASEPATH') OR exit('No direct script access allowed'); class Install extends CI_Controller { protected $footer; public function __construct(){ parent::__construct(); $this->load->library("basic"); $this->basic->load(); $this->load->model('query','',TRUE); $this->load->model('update','',TRUE); $this->footer = $this->query->options('footer')->values; } public function index(){ $this->is_install(); $setup = (int)$_GET['setup']; $data['env'] = $this->check('full'); $data['sum'] = $this->check('part'); $data['title'] = "ImgURL安装向导"; $data['logo'] = "/static/images/logo.png"; $data['footer'] = $this->footer; switch ($setup) { case 1: $this->load->view('user/header.php',$data); $this->load->view('user/install1.php',$data); $this->load->view('user/footer.php'); break; case 2: $data['domain'] = $this->get_domain(); $this->load->view('user/header.php',$data); $this->load->view('user/install2.php',$data); $this->load->view('user/footer.php'); break; case 3: @$info['domain'] = $this->input->post('domain',TRUE); @$info['user'] = $this->input->post('user',TRUE); @$info['pass1'] = $this->input->post('pass1',TRUE); @$info['pass2'] = $this->input->post('pass2',TRUE); $this->verify($info,'domain'); $this->verify($info,'user'); $this->verify($info,'pass'); $this->verify($info,'pass2'); $this->setup($info); $this->load->view('user/header.php',$data); $this->load->view('user/install3.php',$data); $this->load->view('user/footer.php'); break; default: header("location:/install/?setup=1"); break; } } protected function check($type){ $yes = '<span style = "color:green;">通过！</span>'; $no = '<span style = "color:red;">未通过！</span>'; $ext = get_loaded_extensions(); $env['php'] = array( "name" => 'PHP', "requir" => 'PHP >= 5.6', "info" => PHP_VERSION, "result" => is_php('5.6') ? $yes : $no ); $env['sqlite'] = array( "name" => 'PDO_SQLite', "requir" => '必须支持', "info" => array_search('pdo_sqlite',$ext) ? 'Yes':'No', "result" => array_search('pdo_sqlite',$ext) ? $yes : $no ); $env['gd'] = array( "name" => 'GD2', "requir" => '必须支持', "info" => array_search('gd',$ext) ? 'Yes':'No', "result" => array_search('gd',$ext) ? $yes : $no ); $env['imagick'] = array( "name" => 'ImageMagick', "requir" => '可选', "info" => array_search('imagick',$ext) ? 'Yes':'No', "result" => array_search('imagick',$ext) ? $yes : $no ); $env['fileinfo'] = array( "name" => 'Fileinfo', "requir" => '必须支持', "info" => array_search('fileinfo',$ext) ? 'Yes':'No', "result" => array_search('fileinfo',$ext) ? $yes : $no ); $env['data'] = array( "name" => '/data', "requir" => '可写', "info" => is_writable(FCPATH.'data') ? 'Yes':'No', "result" => is_writable(FCPATH.'data') ? $yes : $no ); $env['upload'] = array( "name" => '/imgs', "requir" => '可写', "info" => is_writable(FCPATH.'imgs') ? 'Yes':'No', "result" => is_writable(FCPATH.'imgs') ? $yes : $no ); if($type == 'part'){ foreach($env as $value){ if($value['name'] == 'ImageMagick'){ } elseif($value['result'] == $no){ return FALSE; exit; } } } else{ return $env; } } protected function get_domain(){ $port = $_SERVER["SERVER_PORT"]; switch ( $port ) { case 80: $protocol = "http://"; $port = ''; break; case 443: $protocol = "https://"; $port = ''; break; default: $protocol = "http://"; $port = ":".$port; break; } $uri = $_SERVER["REQUEST_URI"]; $uri = str_replace("check.php","",$uri); $domain = $protocol.$_SERVER['SERVER_NAME'].$port; return $domain; } protected function verify($data,$type){ switch ($type) { case 'user': $pattern = '/^[a-zA-Z0-9]+$/'; if($data['user'] == ''){ echo '请填写用户名！'; exit; } if(!preg_match($pattern,$data['user'])){ echo '用户名格式有误！'; exit; } break; case 'pass': $pattern = '/^[a-zA-Z0-9!@#$%^&*.]+$/'; if(!preg_match($pattern,$data['pass1'])){ echo '密码格式有误！'; exit; } break; case 'pass2': $pass1 = $data['pass1']; $pass2 = $data['pass2']; if($pass1 != $pass2){ echo '两次密码不一致！'; exit; } break; case 'domain': $domain = $data['domain']; if(!filter_var($domain, FILTER_VALIDATE_URL)){ echo '域名格式有误！（需要包含https://）'; exit; } break; default: break; } } protected function setup($data){ $default_db = FCPATH."data/imgurl-simple.db3"; $db_path = FCPATH."data/imgurl.db3"; $lock_file = FCPATH."data/install.lock"; $password = md5($data['pass2'].'imgurl'); $user_values = array( "username" => $data['user'], "password" => $password ); $user_values = json_encode($user_values); $this->load->database(); $userinfo = array( 'name' => 'userinfo', 'values' => $user_values ); $local_storage = array( "engine" => "localhost", "domains" => $data['domain'], "switch" => 'ON' ); $site_url = array( "name" => 'site_url', "values" => $data['domain'] ); $this->db->insert('options', $userinfo); $this->db->insert('options', $site_url); $tmp_data['domains'] = $data['domain']; $this->update->storage($tmp_data,'localhost'); $myfile = fopen($lock_file, "w") or die("Unable to open file!"); $txt = "ImgURL"; fwrite($myfile, $txt); fclose($myfile); return TRUE; } protected function is_install(){ $lock_file = FCPATH."data/install.lock"; if(is_file($lock_file)){ header("location:/"); exit; } } } ?>